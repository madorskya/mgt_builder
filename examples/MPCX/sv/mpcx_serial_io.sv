// This code was automatically generated by FPGA MGT Builder
// Timestamp: 2020-05-04 19:53:48.872
// User: madorsky
// FPGA MGT builder homepage: <link>

`include "drp_interface.sv"
`include "mgt_interfaces.sv"
module mpcx_serial_io
(
	drp.in drp_fif,
	input drpclk,
	input [15:0] refclk_p,
	input [15:0] refclk_n,
	mgt_rx.in mpcx_rx [23:0],
	mgt_tx.in mpcx_tx [11:0],
	output MPCX_15_mmcm_clk
);
	localparam quadn = 9;
	drp #(.AW(12)) drp_qif [quadn-1:0]();
	drp_mux_fpga #(.N(quadn), .AW_QUAD(12)) drpm (drp_qif, drp_fif, drpclk);

	mgt_tx mgt_tx_if [quadn-1:0][3:0]();
	mgt_rx mgt_rx_if [quadn-1:0][3:0]();
	wire [ 3:0] mgt_gtrefclk0 [quadn-1:0];
	wire [ 3:0] mgt_txusrclk [quadn-1:0];
	wire        com_refclkoutmonitor [quadn-1:0];
	wire        com_gtrefclk0 [quadn-1:0];
	wire [15:0] refclk;
	genvar gi;
	generate
		for (gi = 0; gi < quadn; gi++)
		begin: quad_loop
			GTHE2_QUAD #(.ind(gi)) GTHE2_QUAD_inst
			(
				.drp_qif (drp_qif [gi]),
				.drpclk (drpclk),
				.mgt_tx_if (mgt_tx_if [gi]),
				.mgt_rx_if (mgt_rx_if [gi]),
				.mgt_gtrefclk0              (mgt_gtrefclk0              [gi]),
				.mgt_txusrclk               (mgt_txusrclk               [gi]),
				.com_refclkoutmonitor       (com_refclkoutmonitor       [gi]),
				.com_gtrefclk0              (com_gtrefclk0              [gi])
			);
		end
		for (gi = 0; gi < 16; gi++)
		begin: refclk_loop
			IBUFDS_GTE2 refclk_buf
			(
			    .O     (refclk   [gi]),
			    .ODIV2 (),
			    .CEB   (1'b0),
			    .I     (refclk_p [gi]),
			    .IB    (refclk_n [gi])
			);
		end
	endgenerate
	assign_mgt_rx ari0 (mgt_rx_if [0][0], mpcx_rx [23]);
	assign_mgt_rx ari1 (mgt_rx_if [0][1], mpcx_rx [22]);
	assign_mgt_rx ari2 (mgt_rx_if [0][2], mpcx_rx [18]);
	assign_mgt_rx ari3 (mgt_rx_if [0][3], mpcx_rx [19]);
	assign_mgt_rx ari4 (mgt_rx_if [1][0], mpcx_rx [14]);
	assign_mgt_rx ari5 (mgt_rx_if [1][2], mpcx_rx [15]);
	assign_mgt_tx ati6 (mgt_tx_if [2][0], mpcx_tx [3]);
	assign_mgt_tx ati7 (mgt_tx_if [2][1], mpcx_tx [2]);
	assign_mgt_tx ati8 (mgt_tx_if [2][2], mpcx_tx [1]);
	assign_mgt_tx ati9 (mgt_tx_if [2][3], mpcx_tx [0]);
	assign_mgt_tx ati10 (mgt_tx_if [3][0], mpcx_tx [5]);
	assign_mgt_rx ari11 (mgt_rx_if [3][1], mpcx_rx [11]);
	assign_mgt_tx ati11 (mgt_tx_if [3][1], mpcx_tx [4]);
	assign_mgt_tx ati12 (mgt_tx_if [3][2], mpcx_tx [9]);
	assign_mgt_rx ari13 (mgt_rx_if [3][3], mpcx_rx [7]);
	assign_mgt_tx ati13 (mgt_tx_if [3][3], mpcx_tx [8]);
	assign_mgt_rx ari14 (mgt_rx_if [4][0], mpcx_rx [10]);
	assign_mgt_tx ati14 (mgt_tx_if [4][0], mpcx_tx [7]);
	assign_mgt_rx ari15 (mgt_rx_if [4][1], mpcx_rx [6]);
	assign_mgt_tx ati15 (mgt_tx_if [4][1], mpcx_tx [6]);
	assign_mgt_rx ari16 (mgt_rx_if [4][2], mpcx_rx [3]);
	assign_mgt_tx ati16 (mgt_tx_if [4][2], mpcx_tx [10]);
	assign_mgt_rx ari17 (mgt_rx_if [4][3], mpcx_rx [2]);
	assign_mgt_tx ati17 (mgt_tx_if [4][3], mpcx_tx [11]);
	assign_mgt_rx ari18 (mgt_rx_if [5][0], mpcx_rx [20]);
	assign_mgt_rx ari19 (mgt_rx_if [5][1], mpcx_rx [21]);
	assign_mgt_rx ari20 (mgt_rx_if [5][2], mpcx_rx [17]);
	assign_mgt_rx ari21 (mgt_rx_if [5][3], mpcx_rx [16]);
	assign_mgt_rx ari22 (mgt_rx_if [6][0], mpcx_rx [13]);
	assign_mgt_rx ari23 (mgt_rx_if [6][1], mpcx_rx [12]);
	assign_mgt_rx ari24 (mgt_rx_if [7][2], mpcx_rx [9]);
	assign_mgt_rx ari25 (mgt_rx_if [7][3], mpcx_rx [8]);
	assign_mgt_rx ari26 (mgt_rx_if [8][0], mpcx_rx [5]);
	assign_mgt_rx ari27 (mgt_rx_if [8][1], mpcx_rx [1]);
	assign_mgt_rx ari28 (mgt_rx_if [8][2], mpcx_rx [4]);
	assign_mgt_rx ari29 (mgt_rx_if [8][3], mpcx_rx [0]);
	assign mgt_gtrefclk0 [0][0] = refclk [12]; // mpcx_rx 23
	assign mgt_gtrefclk0 [0][1] = refclk [12]; // mpcx_rx 22
	assign mgt_gtrefclk0 [0][2] = refclk [12]; // mpcx_rx 18
	assign mgt_gtrefclk0 [0][3] = refclk [12]; // mpcx_rx 19
	assign mgt_gtrefclk0 [1][0] = refclk [13]; // mpcx_rx 14
	assign mgt_gtrefclk0 [1][2] = refclk [13]; // mpcx_rx 15
	assign mgt_gtrefclk0 [2][0] = refclk [15]; // mpcx_tx 3
	assign mgt_gtrefclk0 [2][1] = refclk [15]; // mpcx_tx 2
	assign mgt_gtrefclk0 [2][2] = refclk [15]; // mpcx_tx 1
	assign mgt_gtrefclk0 [2][3] = refclk [15]; // mpcx_tx 0
	assign mgt_gtrefclk0 [3][0] = refclk [15]; // mpcx_tx 5
	assign mgt_gtrefclk0 [3][1] = refclk [15]; // mpcx_tx 4
	assign mgt_gtrefclk0 [3][2] = refclk [15]; // mpcx_tx 9
	assign mgt_gtrefclk0 [3][3] = refclk [15]; // mpcx_tx 8
	assign mgt_gtrefclk0 [4][0] = refclk [15]; // mpcx_tx 7
	assign mgt_gtrefclk0 [4][1] = refclk [15]; // mpcx_tx 6
	assign mgt_gtrefclk0 [4][2] = refclk [15]; // mpcx_tx 10
	assign mgt_gtrefclk0 [4][3] = refclk [15]; // mpcx_tx 11
	assign mgt_gtrefclk0 [5][0] = refclk [8]; // mpcx_rx 20
	assign mgt_gtrefclk0 [5][1] = refclk [8]; // mpcx_rx 21
	assign mgt_gtrefclk0 [5][2] = refclk [8]; // mpcx_rx 17
	assign mgt_gtrefclk0 [5][3] = refclk [8]; // mpcx_rx 16
	assign mgt_gtrefclk0 [6][0] = refclk [9]; // mpcx_rx 13
	assign mgt_gtrefclk0 [6][1] = refclk [9]; // mpcx_rx 12
	assign mgt_gtrefclk0 [7][2] = refclk [11]; // mpcx_rx 9
	assign mgt_gtrefclk0 [7][3] = refclk [11]; // mpcx_rx 8
	assign mgt_gtrefclk0 [8][0] = refclk [11]; // mpcx_rx 5
	assign mgt_gtrefclk0 [8][1] = refclk [11]; // mpcx_rx 1
	assign mgt_gtrefclk0 [8][2] = refclk [11]; // mpcx_rx 4
	assign mgt_gtrefclk0 [8][3] = refclk [11]; // mpcx_rx 0
	MPCX_mmcm MPCX_15_inst (.O(MPCX_15_mmcm_clk), .I(mgt_tx_if[2][0].txoutclk));
	assign mgt_txusrclk[2][0] = MPCX_15_mmcm_clk; // mpcx_tx3
	assign mgt_txusrclk[2][1] = MPCX_15_mmcm_clk; // mpcx_tx2
	assign mgt_txusrclk[2][2] = MPCX_15_mmcm_clk; // mpcx_tx1
	assign mgt_txusrclk[2][3] = MPCX_15_mmcm_clk; // mpcx_tx0
	assign mgt_txusrclk[3][0] = MPCX_15_mmcm_clk; // mpcx_tx5
	assign mgt_txusrclk[3][1] = MPCX_15_mmcm_clk; // mpcx_tx4
	assign mgt_txusrclk[3][2] = MPCX_15_mmcm_clk; // mpcx_tx9
	assign mgt_txusrclk[3][3] = MPCX_15_mmcm_clk; // mpcx_tx8
	assign mgt_txusrclk[4][0] = MPCX_15_mmcm_clk; // mpcx_tx7
	assign mgt_txusrclk[4][1] = MPCX_15_mmcm_clk; // mpcx_tx6
	assign mgt_txusrclk[4][2] = MPCX_15_mmcm_clk; // mpcx_tx10
	assign mgt_txusrclk[4][3] = MPCX_15_mmcm_clk; // mpcx_tx11
endmodule
