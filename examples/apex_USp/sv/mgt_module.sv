// This code was automatically generated by FPGA MGT Builder
// Timestamp: 2020-11-04 11:46:15.4
// User: madorsky
// FPGA MGT builder homepage: <link>

`include "drp_interface.sv"
`include "mgt_interfaces.sv"
module GTYE4_CHANNEL_tux
#(parameter [7:0] qind = 0, parameter [7:0] mind = 0)
(
	drp.in drp_if,
	mgt_tx.in mgt_tx_if,
	mgt_rx.in mgt_rx_if,
	input         qpll0clk,
	input         qpll1clk,
	input         qpll0refclk,
	input         qpll1refclk,
	input         cplllockdetclk,
	input         drpclk,
	input         dmonitorclk,
	input         txusrclk,
	input         txusrclk2,
	input         txlatclk,
	output [ 1:0] txbufstatus,
	output        txoutclk,
	output        rxphaligndone,
	input         rxsyncallin
);
`include "xymap.sv"
	wire [15:0] XY = mgtxy[qind][mind];
	reg  [31:0] reg_  [ 5: 0];
	wire [31:0] wire_ [ 7: 6];
    reg         int_reg_rdy;
    reg  [31:0] drpdo_reg;
    wire        drprdy_mgt;
    wire [31:0] drpdo_mgt;
    reg         drprdy_reg;
    assign drp_if.drprdy = drprdy_reg;
    assign drp_if.drpdo  = drpdo_reg;
    always @(posedge drpclk)
    begin
        drprdy_reg = 1'b0;
		drpdo_reg = 32'h0;
        if (drp_if.int_reg == 1'b1)
        begin
            if (drp_if.drpwe == 1'b1)
            begin
                case (drp_if.drpaddr)

                    9'd0: reg_[0] = drp_if.drpdi;
                    9'd1: reg_[1] = drp_if.drpdi;
                    9'd2: reg_[2] = drp_if.drpdi;
                    9'd3: reg_[3] = drp_if.drpdi;
                    9'd4: reg_[4] = drp_if.drpdi;
                    9'd5: reg_[5] = drp_if.drpdi;
                endcase
                drprdy_reg = 1'b1;
            end
            else
            begin
                case (drp_if.drpaddr)

                    9'd0: drpdo_reg = reg_[0];
                    9'd1: drpdo_reg = reg_[1];
                    9'd2: drpdo_reg = reg_[2];
                    9'd3: drpdo_reg = reg_[3];
                    9'd4: drpdo_reg = reg_[4];
                    9'd5: drpdo_reg = reg_[5];
                    9'd6: drpdo_reg = wire_[6];
                    9'd7: drpdo_reg = wire_[7];
                    9'h1ff: drpdo_reg = XY; // each MGT reports its XY
                endcase
                drprdy_reg = 1'b1;
            end
        end

        if (drprdy_mgt == 1'b1)
        begin
            drpdo_reg = drpdo_mgt;
            drprdy_reg = 1'b1;
        end
    end

	GTYE4_CHANNEL GTYE4_CHANNEL_inst
	(
		.CPLLREFCLKSEL              (3'b1),
		.GTGREFCLK                  (1'b0),
		.GTNORTHREFCLK0             (1'b0),
		.GTNORTHREFCLK1             (1'b0),
		.GTREFCLK0                  (1'b0),
		.GTREFCLK1                  (1'b0),
		.GTSOUTHREFCLK0             (1'b0),
		.GTSOUTHREFCLK1             (1'b0),
		.QPLL0CLK                   (qpll0clk                  ),
		.QPLL1CLK                   (qpll1clk                  ),
		.QPLL0REFCLK                (qpll0refclk               ),
		.QPLL1REFCLK                (qpll1refclk               ),
		.RXSYSCLKSEL                ( reg_[0][ 1: 0]),
		.TXSYSCLKSEL                ( reg_[0][ 3: 2]),
		.TXPLLCLKSEL                ( reg_[0][ 5: 4]),
		.RXPLLCLKSEL                ( reg_[0][ 7: 6]),
		.GTREFCLKMONITOR            (),
		.CPLLLOCKDETCLK             (cplllockdetclk            ),
		.CPLLLOCKEN                 (1'b1),
		.CPLLPD                     ( reg_[0][ 8: 8]),
		.CPLLREFCLKSEL              (3'b1),
		.CPLLRESET                  (1'b0),
		.CPLLFBCLKLOST              (wire_[6][ 0: 0]),
		.CPLLLOCK                   (wire_[6][ 1: 1]),
		.CPLLREFCLKLOST             (wire_[6][ 2: 2]),
		.GTRESETSEL                 ( reg_[0][ 9: 9]),
		.RESETOVRD                  (1'b0),
		.GTTXRESETSEL               ( reg_[0][10:10]),
		.GTRXRESETSEL               ( reg_[0][11:11]),
		.GTTXRESET                  ( reg_[0][12:12]),
		.TXPMARESET                 ( reg_[0][13:13]),
		.TXPCSRESET                 ( reg_[0][14:14]),
		.TXUSERRDY                  ( reg_[0][15:15]),
		.TXRESETDONE                (wire_[6][ 3: 3]),
		.CFGRESET                   ( reg_[0][16:16]),
		.TXPMARESETDONE             (wire_[6][ 4: 4]),
		.PCSRSVDOUT                 (),
		.RESETEXCEPTION             (),
		.GTPOWERGOOD                (wire_[6][ 5: 5]),
		.TXDCCDONE                  (),
		.TXDCCFORCESTART            (),
		.TXDCCRESET                 (),
		.GTRXRESET                  ( reg_[0][17:17]),
		.RXOSCALRESET               ( reg_[0][18:18]),
		.RSOSINTDONE                (),
		.RXPMARESET                 ( reg_[0][19:19]),
		.RXCDRRESET                 (1'b0),
		.RXCDRFREQRESET             (1'b0),
		.RXDFELPMRESET              ( reg_[0][20:20]),
		.EYESCANRESET               ( reg_[0][21:21]),
		.RXPCSRESET                 ( reg_[0][22:22]),
		.RXBUFRESET                 ( reg_[0][23:23]),
		.RXUSERRDY                  ( reg_[0][24:24]),
		.RXRESETDONE                (wire_[6][ 6: 6]),
		.RXPMARESETDONE             (wire_[6][ 7: 7]),
		.RXOOBRESET                 (1'b0),
		.RESETEXCEPTION             (),
		.GTPOWERGOOD                (wire_[6][ 8: 8]),
		.RXCKCALDONE                (),
		.RXCKCALRESET               (1'b0),
		.RXCKCALSTART               (7'b0),
		.RXPD                       ( reg_[0][26:25]),
		.TXPD                       ( reg_[0][28:27]),
		.TXPDELECIDLEMODE           (1'b0),
		.TXPHDLYPD                  (1'b0),
		.RXPHDLYPD                  (1'b0),
		.LOOPBACK                   ( reg_[0][31:29]),
		.DRPADDR                    (drp_if.drpaddr            ),
		.DRPCLK                     (drpclk                    ),
		.DRPDI                      (drp_if.drpdi [15:0]),
		.DRPDO                      (drpdo_mgt [15:0]),
		.DRPEN                      (drp_if.drpen              ),
		.DRPRDY                     (drprdy_mgt),
		.DRPWE                      (drp_if.drpwe              ),
		.DRPRST                     ( reg_[1][ 0: 0]),
		.DMONITOROUT                (wire_[6][24: 9]),
		.DMONITORCLK                (dmonitorclk               ),
		.DMONFIFORESET              ( reg_[1][ 1: 1]),
		.DMONITOROUTCLK             (wire_[6][25:25]),
		.TXCTRL0                    (mgt_tx_if.txctrl0         ),
		.TXCTRL1                    (mgt_tx_if.txctrl1         ),
		.TXCTRL2                    (mgt_tx_if.txctrl2         ),
		.TXDATA                     (mgt_tx_if.txdata          ),
		.TXDATAEXTENDRSVD           (1'b0),
		.TXUSRCLK                   (txusrclk                  ),
		.TXUSRCLK2                  (txusrclk2                 ),
		.TX8B10BBYPASS              ( reg_[1][ 9: 2]),
		.TX8B10BEN                  ( reg_[1][10:10]),
		.TXHEADER                   (mgt_tx_if.txheader        ),
		.TXSEQUENCE                 (mgt_tx_if.txsequence      ),
		.TXBUFSTATUS                (wire_[6][27:26]),
		.TXLATCLK                   (txlatclk                  ),
		.TXBUFSTATUS                (txbufstatus               ),
		.TXPHDLYRESET               ( reg_[1][11:11]),
		.TXPHALIGN                  ( reg_[1][12:12]),
		.TXPHALIGNEN                ( reg_[1][13:13]),
		.TXPHDLYPD                  ( reg_[1][14:14]),
		.TXPHINIT                   (wiz),
		.TXPHOVRDEN                 ( reg_[1][15:15]),
		.TXDLYSRESET                ( reg_[1][16:16]),
		.TXDLYBYPASS                ( reg_[1][17:17]),
		.TXDLYEN                    ( reg_[1][18:18]),
		.TXDLYOVRDEN                ( reg_[1][19:19]),
		.TXPHDLYTSTCLK              (wiz),
		.TXDLYHOLD                  (wiz),
		.TXDLYUPDOWN                (wiz),
		.TXPHALIGNDONE              (wire_[6][28:28]),
		.TXPHINITDONE               (wire_[6][29:29]),
		.TXDLYSRESETDONE            (wire_[6][30:30]),
		.TXSYNCMODE                 ( reg_[1][20:20]),
		.TXSYNCALLIN                ( reg_[1][21:21]),
		.TXSYNCIN                   ( reg_[1][22:22]),
		.TXSYNCOUT                  (wire_[6][31:31]),
		.TXSYNCDONE                 (wire_[7][ 0: 0]),
		.TXPRBSSEL                  ( reg_[1][26:23]),
		.TXPRBSFORCEERR             ( reg_[1][27:27]),
		.TXPOLARITY                 ( reg_[1][28:28]),
		.TXPROGDIVRESET             ( reg_[1][29:29]),
		.TXPRGDIVRESETDONE          (wire_[7][ 1: 1]),
		.TXOUTCLKSEL                ( reg_[2][ 2: 0]),
		.TXRATE                     ( reg_[2][ 5: 3]),
		.TXOUTCLKFABRIC             (),
		.TXOUTCLK                   (txoutclk                  ),
		.TXOUTCLKPCS                (),
		.TXRATEDONE                 (wire_[7][ 2: 2]),
		.TXDLYBYPASS                ( reg_[2][ 6: 6]),
		.TXRATEMODE                 ( reg_[2][ 7: 7]),
		.TXPIPPMEN                  ( reg_[2][ 8: 8]),
		.TXPIPPMOVRDEN              ( reg_[2][ 9: 9]),
		.TXPIPPMSEL                 ( reg_[2][10:10]),
		.TXPIPPMPD                  ( reg_[2][11:11]),
		.TXPIPPMSTEPSIZE            ( reg_[2][16:12]),
		.TXDEEMPH                   ( reg_[2][18:17]),
		.TXDIFFCTRL                 ( reg_[2][23:19]),
		.TXELECIDLE                 ( reg_[2][24:24]),
		.TXINHIBIT                  ( reg_[2][25:25]),
		.TXMAINCURSOR               ( reg_[3][ 6: 0]),
		.TXMARGIN                   ( reg_[3][ 9: 7]),
		.TXPOSTCURSOR               ( reg_[3][14:10]),
		.TXPRECURSOR                ( reg_[3][19:15]),
		.MGTYTXP                    (mgt_tx_if.mgtytxp         ),
		.MGTYTXN                    (mgt_tx_if.mgtytxn         ),
		.TXSWING                    ( reg_[3][20:20]),
		.TXPISOPD                   (wiz),
		.TXDETECTRX                 (1'b0),
		.PHYSTATUS                  (),
		.RXSTATUS                   (),
		.TXCOMFINISH                (),
		.TXCOMINIT                  (1'b0),
		.TXCOMSAS                   (1'b0),
		.TXCOMWAKE                  (1'b0),
		.GTYRXP                     (mgt_rx_if.gtyrxp          ),
		.GTYRXN                     (mgt_rx_if.gtyrxn          ),
		.RXTERMINATION              (wiz),
		.RXOOBRESET                 (1'b0),
		.RXELECIDLEMODE             ( reg_[3][22:21]),
		.RXELECIDLE                 (),
		.RXCOMINITDET               (),
		.RXCOMSASDET                (),
		.RXCOMWAKEDET               (),
		.TXSYSCLKSEL                ( reg_[3][23:23]),
		.RXCDRHOLD                  ( reg_[3][24:24]),
		.RXCDROVRDEN                ( reg_[3][25:25]),
		.RXLPMEN                    ( reg_[3][26:26]),
		.RXDFELPMRESET              ( reg_[3][27:27]),
		.RXOSHOLD                   (wiz),
		.RXOSOVRDEN                 (wiz),
		.RXLPMLFHOLD                (wiz),
		.RXLPMLFKLOVRDEN            (wiz),
		.RXLPMHFHOLD                (wiz),
		.RXLPMHFOVRDEN              (wiz),
		.RXDFEAGCHOLD               (wiz),
		.RXDFEAGCOVRDEN             (wiz),
		.RXDFELFHOLD                (wiz),
		.RXDFELFOVRDEN              (wiz),
		.RXDFEUTHOLD                (wiz),
		.RXDFEUTOVRDEN              (wiz),
		.RXDFEVPHOLD                (wiz),
		.RXDFEVPOVRDEN              (wiz),
		.RXDFETAP2HOLD              (wiz),
		.RXDFETAP2OVRDEN            (wiz),
		.RXDFETAP3HOLD              (wiz),
		.RXDFETAP3OVRDEN            (wiz),
		.RXDFETAP4HOLD              (wiz),
		.RXDFETAP4OVRDEN            (wiz),
		.RXDFETAP5HOLD              (wiz),
		.RXDFETAP5OVRDEN            (wiz),
		.RXDFETAP6HOLD              (wiz),
		.RXDFETAP6OVRDEN            (wiz),
		.RXDFETAP7HOLD              (wiz),
		.RXDFETAP7OVRDEN            (wiz),
		.RXDFETAP8HOLD              (wiz),
		.RXDFETAP8OVRDEN            (wiz),
		.RXDFETAP9HOLD              (wiz),
		.RXDFETAP9OVRDEN            (wiz),
		.RXDFETAP10HOLD             (wiz),
		.RXDFETAP10OVRDEN           (wiz),
		.RXDFETAP11HOLD             (wiz),
		.RXDFETAP11OVRDEN           (wiz),
		.RXDFETAP12HOLD             (wiz),
		.RXDFETAP12OVRDEN           (wiz),
		.RXDFETAP13HOLD             (wiz),
		.RXDFETAP13OVRDEN           (wiz),
		.RXDFETAP14HOLD             (wiz),
		.RXDFETAP14OVRDEN           (wiz),
		.RXDFETAP15HOLD             (wiz),
		.RXDFETAP15OVRDEN           (wiz),
		.RXMONITORSEL               (wiz),
		.RXMONITOROUT               (),
		.RXAFECFOKEN                (wiz),
		.RXOSINTSTROBESTARTED       (wiz),
		.RXDFEXYDEN                 (wiz),
		.RXOSINTDONE                (),
		.RXOSINTSTARTED             (),
		.RXOSINTSTROBEDONE          (),
		.RXLPMOSHOLD                (wiz),
		.RXLPMOSOVRDEN              (wiz),
		.RXLPMGCHOLD                (wiz),
		.RXLPMGCOVRDEN              (wiz),
		.FREQOS                     (wiz),
		.RXDFECFOKFCNUM             (wiz),
		.RXDFECFOKFEN               (wiz),
		.RXDFECFOKFPULSE            (wiz),
		.RXDFECFOKHOLD              (wiz),
		.RXDFECFOKOVREN             (wiz),
		.RXDFEKHHOLD                (wiz),
		.RXDFEKHOVRDEN              (wiz),
		.RXCDRFREQRESET             ( reg_[3][28:28]),
		.RXCDRHOLD                  ( reg_[3][29:29]),
		.RXCDROVRDEN                (wiz),
		.RXCDRRESET                 (wiz),
		.RXRATE                     ( reg_[4][ 2: 0]),
		.RXCDRLOCK                  (),
		.RXCDRPHDONE                (),
		.INCPCTRL                   (wiz),
		.CDRSTEPSX                  (wiz),
		.CDRSTEPSQ                  (wiz),
		.CDRSTEPDIR                 (wiz),
		.RXPROGDIVRESET             ( reg_[4][ 3: 3]),
		.RXPRGDIVRESETDONE          (wire_[7][ 3: 3]),
		.RXOUTCLKSEL                ( reg_[4][ 6: 4]),
		.RXRATE                     ( reg_[4][ 9: 7]),
		.RXOUTCLKFABRIC             (),
		.RXOUTCLK                   (mgt_rx_if.rxoutclk        ),
		.RXOUTCLKPCS                (),
		.RXRATEDONE                 (),
		.RXDLYBYPASS                ( reg_[4][10:10]),
		.RXRATEMODE                 ( reg_[4][11:11]),
		.EYESCANDATAERROR           (wire_[7][ 4: 4]),
		.EYESCANTRIGGER             ( reg_[4][12:12]),
		.RXPOLARITY                 ( reg_[4][13:13]),
		.RXPRBSCNTRESET             ( reg_[4][14:14]),
		.RXPRBSSEL                  ( reg_[4][18:15]),
		.RXPRBSERR                  (wire_[7][ 5: 5]),
		.RXPRBSLOCKED               (wire_[7][ 6: 6]),
		.RXBYTEISALIGNED            (wire_[7][ 7: 7]),
		.RXBYTEREALIGN              (),
		.RXCOMMADET                 (),
		.RXCOMMADETEN               ( reg_[4][19:19]),
		.RXPCOMMAALIGNEN            ( reg_[4][20:20]),
		.RXMCOMMAALIGNEN            ( reg_[4][21:21]),
		.RXSLIDE                    (mgt_rx_if.rxslide         ),
		.RX8B10BEN                  ( reg_[4][22:22]),
		.RXCTRL0                    (mgt_rx_if.rxctrl0         ),
		.RXCTRL1                    (mgt_rx_if.rxctrl1         ),
		.RXCTRL2                    (mgt_rx_if.rxctrl2         ),
		.RXCTRL3                    (mgt_rx_if.rxctrl3         ),
		.RXPHDLYRESET               ( reg_[4][23:23]),
		.RXPHALIGN                  ( reg_[4][24:24]),
		.RXPHALIGNEN                ( reg_[4][25:25]),
		.RXPHDLYPD                  ( reg_[4][26:26]),
		.RXDLYSRESET                ( reg_[4][27:27]),
		.RXDLYBYPASS                ( reg_[4][28:28]),
		.RXDLYEN                    ( reg_[4][29:29]),
		.RXDLYOVRDEN                ( reg_[4][30:30]),
		.RXPHALIGNDONE              (rxphaligndone             ),
		.RXDLYSRESETDONE            (wire_[7][ 8: 8]),
		.RXSYNCMODE                 ( reg_[4][31:31]),
		.RXSYNCALLIN                (rxsyncallin               ),
		.RXSYNCIN                   ( reg_[5][ 0: 0]),
		.RXSYNCOUT                  (wire_[7][ 9: 9]),
		.RXSYNCDONE                 (wire_[7][10:10]),
		.RXSLIPOUTCLK               ( reg_[5][ 1: 1]),
		.RXSLIPPMA                  ( reg_[5][ 2: 2]),
		.RXPHALIGNERR               (wire_[7][11:11]),
		.RXBUFRESET                 ( reg_[5][ 3: 3]),
		.RXBUFSTATUS                (wire_[7][14:12]),
		.RXCLKCORCNT                (),
		.RXCHANBONDSEQ              (),
		.RXCHANISALIGNED            (),
		.RXCHANREALIGN              (),
		.RXCHBONDI                  (5'b0),
		.RXCHBONDO                  (),
		.RXCHBONDLEVEL              (3'b0),
		.RXCHBONDMASTER             (1'b0),
		.RXCHBONDSLAVE              (1'b0),
		.RXCHBONDEN                 (1'b0),
		.RXDATAVALID                (mgt_rx_if.rxdatavalid     ),
		.RXGEARBOXSLIP              (mgt_rx_if.rxgearboxslip   ),
		.RXHEADER                   (mgt_rx_if.rxheader        ),
		.RXHEADERVALID              (mgt_rx_if.rxheadervalid   ),
		.RXSTARTOFSEQ               (mgt_rx_if.rxstartofseq    ),
		.RXLATCLK                   (mgt_rx_if.rxlatclk        ),
		.RXDATA                     (mgt_rx_if.rxdata          ),
		.RXUSRCLK                   (mgt_rx_if.rxusrclk        ),
		.RXUSRCLK2                  (mgt_rx_if.rxusrclk2       ),
		.RXDATAEXTENDRSVD           ()
	);
endmodule
